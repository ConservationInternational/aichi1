#Trends
trends_df<-read.csv("Data_Apr/TRENDS.csv",stringsAsFactors = F)
str(trends_df)
####Open data files
#Trends
trends_df<-read.csv("Data_Apr/TRENDS.csv",stringsAsFactors = F)
unique(trends_df$issue)
trends_df$country[is.na(trends_df$country)]<-"NA"
unique(trends_df$country)
trends_df<-subset(trends_df,trends_df$month!="2018-05")
unique(trends_df$month)
head(trends_df)
str(trends_df)
#Twitter
twitter_df<-read.csv("Data_Apr/TWITTER-ALL.csv",stringsAsFactors = F)
twitter_df<-twitter_df[twitter_df$issue %in% trends_df$issue,]
unique(twitter_df$issue)
twitter_df$country[is.na(twitter_df$country)]<-"NA"
unique(twitter_df$country)
twitter_df<-subset(twitter_df,twitter_df$month!="2018-05")
unique(twitter_df$month)
head(twitter_df)
str(twitter_df)
#Webhose
webhose_df<-read.csv("Data_Apr/WEBHOSE-ALL.csv",stringsAsFactors = F)
webhose_df<-webhose_df[webhose_df$issue %in% trends_df$issue,]
unique(webhose_df$issue)
webhose_df$country[is.na(webhose_df$country)]<-"NA"
unique(webhose_df$country)
#Webhose
webhose_df<-read.csv("Data_Apr/WEBHOSE-ALL.csv",stringsAsFactors = F)
webhose_df<-webhose_df[webhose_df$issue %in% trends_df$issue,]
unique(webhose_df$issue)
webhose_df$country[is.na(webhose_df$country)]<-"NA"
unique(webhose_df$country)
webhose_df<-subset(webhose_df,webhose_df$month!="2018-5")
unique(webhose_df$month)
head(webhose_df)
str(webhose_df)
#Filter countries
trends_df<-trends_df[trends_df$country %in% webhose_df$country,]
twitter_df<-twitter_df[twitter_df$country %in% webhose_df$country,]
hist(twitter$baseline)
hist(twitter_df$baseline)
summary(twitter_df$baseline)
summary(twitter_df$rate)
summary(webhose_df$baseline)
#Identify max rate per issue
twitter_df_maxrate<-as.data.frame(twitter_df %>% group_by(issue) %>% summarise(top = max(rate)))
twitter_df_maxrate1000<-as.data.frame(subset(twitter_df,twitter_df$baseline>=1000) %>% group_by(issue) %>% summarise(top = max(rate)))
twitter_df_maxrate
twitter_df_maxrate1000
webhose_df_maxrate<-as.data.frame(webhose_df %>% group_by(issue) %>% summarise(top = max(rate)))
webhose_df_maxrate1000<-as.data.frame(subset(webhose_df,webhose_df$subset>=1000) %>% group_by(issue) %>% summarise(top = max(rate)))
#Merge datasets and scale
twitter_merge<-left_join(twitter_df,twitter_df_maxrate1000,by=("issue"))
twitter_merge$rvol<-(twitter_merge$rate*100)/twitter_merge$top
twitter_sum<-as.data.frame(twitter_merge %>% group_by(country,issue) %>% summarise(mean_rvol_tw = mean(rvol)))
twitter_sum
twitter_merge
twitter_merge$rvol[which(twitter_merge$rvol>100)]
#Merge datasets and scale
twitter_merge<-left_join(twitter_df,twitter_df_maxrate1000,by=("issue"))
twitter_merge$rvol<-(twitter_merge$rate*100)/twitter_merge$top
twitter_merge$rvol[which(twitter_merge$rvol>100)]<-100
twitter_sum<-as.data.frame(twitter_merge %>% group_by(country,issue) %>% summarise(mean_rvol_tw = mean(rvol)))
webhose_merge<-left_join(webhose_df,webhose_df_maxrate1000,by=("issue"))
webhose_merge$rvol<-(webhose_merge$rate*100)/webhose_merge$top
webhose_merge$rvol[which(webhose_merge$rvol>100)]<-100
webhose_sum<-as.data.frame(webhose_merge %>% group_by(country,issue) %>% summarise(mean_rvol_wh = mean(rvol)))
webhose_sum
webhose_df_maxrate1000
#Identify max rate per issue
twitter_df_maxrate<-as.data.frame(twitter_df %>% group_by(issue) %>% summarise(top = max(rate)))
twitter_df_maxrate1000<-as.data.frame(subset(twitter_df,twitter_df$baseline>=1000) %>% group_by(issue) %>% summarise(top = max(rate)))
webhose_df_maxrate<-as.data.frame(webhose_df %>% group_by(issue) %>% summarise(top = max(rate)))
webhose_df_maxrate1000<-as.data.frame(subset(webhose_df,webhose_df$baseline>=1000) %>% group_by(issue) %>% summarise(top = max(rate)))
#Merge datasets and scale
twitter_merge<-left_join(twitter_df,twitter_df_maxrate1000,by=("issue"))
twitter_merge$rvol<-(twitter_merge$rate*100)/twitter_merge$top
twitter_merge$rvol[which(twitter_merge$rvol>100)]<-100
twitter_sum<-as.data.frame(twitter_merge %>% group_by(country,issue) %>% summarise(mean_rvol_tw = mean(rvol)))
twitter_sum
webhose_merge<-left_join(webhose_df,webhose_df_maxrate1000,by=("issue"))
webhose_merge$rvol<-(webhose_merge$rate*100)/webhose_merge$top
webhose_merge$rvol[which(webhose_merge$rvol>100)]<-100
webhose_sum<-as.data.frame(webhose_merge %>% group_by(country,issue) %>% summarise(mean_rvol_wh = mean(rvol)))
webhose_sum
trends_sum<-as.data.frame(trends_df %>% group_by(country,issue) %>% summarise(mean_rvol_tr = mean(rate)))
all_df<-left_join(trends_sum,twitter_sum,by=c("country","issue"))
all_df<-left_join(all_df,webhose_sum,by=c("country","issue"))
head(all_df)
all_df$mean_rvol<-(all_df$mean_rvol_tr+all_df$mean_rvol_tw+all_df$mean_rvol_wh)/3
all_sum<-all_df[,c(1,2,6)]
all_sum
#Convert database from wide to long format
all_sum_wide<-spread(all_sum,issue,mean_rvol)
all_sum_wide
#remove countries where search interest never peaked above 5 - this removes coutnries with few data
all_sum_wide<-all_sum_wide[apply(all_sum_wide[,2:23],1,function(x) any(x>5)),]
#Convert database from wide to long format
all_sum_wide<-spread(all_sum,issue,mean_rvol)
#remove countries where search interest never peaked above 5 - this removes coutnries with few data
all_sum_wide<-all_sum_wide[apply(all_sum_wide[,2:23],1,function(x) any(x>5)),]
head(all_sum_wide)
#remove countries where search interest never peaked above 5 - this removes coutnries with few data
all_sum_wide<-all_sum_wide[apply(all_sum_wide[,2:23],1,function(x) any(x>10)),]
head(all_sum_wide)
#Associate countries with continents and create a data frame with that information
unique_ctr_sum<-all_sum_wide$country
country_data_sum<-data.frame(ctr_names_iso2=unique_ctr_sum,
ctr_names_full=countrycode(unique_ctr_sum, 'iso2c', 'country.name'),
continent=countrycode(unique_ctr_sum, 'iso2c', 'continent'),
stringsAsFactors=F)
country_data_sum$continent<-as.factor(country_data_sum$continent)
#Calculate PCA
res.pca <- prcomp(all_sum_wide[,c(2:23)], scale = TRUE)
rownames(res.pca$x)<-unique_ctr_sum
cols<-brewer.pal(5, "Spectral")
#Country plot
ctr.plot<-fviz_pca_ind(res.pca,
geom.ind = c("point"),
pointshape = 21,
pointsize = "cos2",
fill.ind = country_data_sum$continent,col.ind="black",invisible = "quali",
legend.title = list(fill = "Continent", size = "Representation"))+
ggpubr::fill_palette("Spectral")+
scale_x_reverse()+
geom_text(aes(label=name),hjust=0, vjust=0, show.legend=F, check_overlap=T,size=3.5)+
theme(legend.position = "bottom")+
guides(fill = guide_legend(override.aes = list(size = 5)))
ctr.plot<-ggpar(ctr.plot,
title = "Principal Component Analysis",
xlab = "PC1 (26%)", ylab = "PC2 (13.5%)")
ctr.plot
#Country plot
ctr.plot<-fviz_pca_ind(res.pca,
geom.ind = c("point","text"),
pointshape = 21,
pointsize = "cos2",
fill.ind = country_data_sum$continent,col.ind="black",invisible = "quali",
legend.title = list(fill = "Continent", size = "Representation"),repel=T)+
ggpubr::fill_palette("Spectral")+
scale_x_reverse()+
#geom_text(aes(label=name),hjust=0, vjust=0, show.legend=F, check_overlap=T,size=3.5)+
theme(legend.position = "bottom")+
guides(fill = guide_legend(override.aes = list(size = 5)))
ctr.plot<-ggpar(ctr.plot,
title = "Principal Component Analysis",
xlab = "PC1 (26%)", ylab = "PC2 (13.5%)")
ctr.plot
#remove countries where search interest never peaked above 5 - this removes coutnries with few data
all_sum_wide<-all_sum_wide[apply(all_sum_wide[,2:23],1,function(x) any(x>15)),]
head(all_sum_wide)
#Associate countries with continents and create a data frame with that information
unique_ctr_sum<-all_sum_wide$country
country_data_sum<-data.frame(ctr_names_iso2=unique_ctr_sum,
ctr_names_full=countrycode(unique_ctr_sum, 'iso2c', 'country.name'),
continent=countrycode(unique_ctr_sum, 'iso2c', 'continent'),
stringsAsFactors=F)
country_data_sum$continent<-as.factor(country_data_sum$continent)
#Calculate PCA
res.pca <- prcomp(all_sum_wide[,c(2:23)], scale = TRUE)
rownames(res.pca$x)<-unique_ctr_sum
cols<-brewer.pal(5, "Spectral")
#Country plot
ctr.plot<-fviz_pca_ind(res.pca,
geom.ind = c("point","text"),
pointshape = 21,
pointsize = "cos2",
fill.ind = country_data_sum$continent,col.ind="black",invisible = "quali",
legend.title = list(fill = "Continent", size = "Representation"),repel=T)+
ggpubr::fill_palette("Spectral")+
scale_x_reverse()+
#geom_text(aes(label=name),hjust=0, vjust=0, show.legend=F, check_overlap=T,size=3.5)+
theme(legend.position = "bottom")+
guides(fill = guide_legend(override.aes = list(size = 5)))
ctr.plot<-ggpar(ctr.plot,
title = "Principal Component Analysis",
xlab = "PC1 (26%)", ylab = "PC2 (13.5%)")
ctr.plot
#remove countries where search interest never peaked above 5 - this removes coutnries with few data
all_sum_wide<-all_sum_wide[apply(all_sum_wide[,2:23],1,function(x) any(x>10)),]
head(all_sum_wide)
#Convert database from wide to long format
all_sum_wide<-spread(all_sum,issue,mean_rvol)
#remove countries where search interest never peaked above 5 - this removes coutnries with few data
all_sum_wide<-all_sum_wide[apply(all_sum_wide[,2:23],1,function(x) any(x>10)),]
head(all_sum_wide)
#Associate countries with continents and create a data frame with that information
unique_ctr_sum<-all_sum_wide$country
country_data_sum<-data.frame(ctr_names_iso2=unique_ctr_sum,
ctr_names_full=countrycode(unique_ctr_sum, 'iso2c', 'country.name'),
continent=countrycode(unique_ctr_sum, 'iso2c', 'continent'),
stringsAsFactors=F)
country_data_sum$continent<-as.factor(country_data_sum$continent)
#Calculate PCA
res.pca <- prcomp(all_sum_wide[,c(2:23)], scale = TRUE)
rownames(res.pca$x)<-unique_ctr_sum
cols<-brewer.pal(5, "Spectral")
#Country plot
ctr.plot<-fviz_pca_ind(res.pca,
geom.ind = c("point","text"),
pointshape = 21,
pointsize = "cos2",
textsize=3,
fill.ind = country_data_sum$continent,col.ind="black",invisible = "quali",
legend.title = list(fill = "Continent", size = "Representation"),repel=T)+
ggpubr::fill_palette("Spectral")+
scale_x_reverse()+
#geom_text(aes(label=name),hjust=0, vjust=0, show.legend=F, check_overlap=T,size=3.5)+
theme(legend.position = "bottom")+
guides(fill = guide_legend(override.aes = list(size = 5)))
ctr.plot<-ggpar(ctr.plot,
title = "Principal Component Analysis",
xlab = "PC1 (26%)", ylab = "PC2 (13.5%)")
ctr.plot
?fviz_pca_ind
#Country plot
ctr.plot<-fviz_pca_ind(res.pca,
geom.ind = c("point"),
pointshape = 21,
pointsize = "cos2",
fill.ind = country_data_sum$continent,col.ind="black",invisible = "quali",
legend.title = list(fill = "Continent", size = "Representation"),repel=T)+
ggpubr::fill_palette("Spectral")+
scale_x_reverse()+
geom_text_repel(aes(label=name),hjust=0, vjust=0, show.legend=F, size=3.5)+
theme(legend.position = "bottom")+
guides(fill = guide_legend(override.aes = list(size = 5)))
ctr.plot<-ggpar(ctr.plot,
title = "Principal Component Analysis",
xlab = "PC1 (26%)", ylab = "PC2 (13.5%)")
ctr.plot
#Variable plot
var.plot<-fviz_pca_var(res.pca, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
legend.title = "Contribution",repel=T,labelsize = 4)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(fill="white"))+
scale_x_reverse()
var.plot<-ggpar(var.plot,
title = "Variable contribution",
xlab = "", ylab = "")
var.plot
#Build multipart figure
figure <- ggdraw() +
draw_plot(ctr.plot, x = 0, y = 0, width = .92, height = 1) +
draw_plot(var.plot, x = .51, y = .22, width = 0.6, height = 0.6)
figure
#Build multipart figure
figure <- ggdraw() +
draw_plot(ctr.plot, x = 0, y = 0, width = .92, height = 1) +
draw_plot(var.plot, x = .51, y = .25, width = 0.6, height = 0.6)
figure
#Build multipart figure
figure <- ggdraw() +
draw_plot(ctr.plot, x = 0, y = 0, width = .92, height = 1) +
draw_plot(var.plot, x = .55, y = .28, width = 0.55, height = 0.55)
figure
#Build multipart figure
figure <- ggdraw() +
draw_plot(ctr.plot, x = 0, y = 0, width = .92, height = 1) +
draw_plot(var.plot, x = .55, y = .32, width = 0.55, height = 0.55)
figure
#Variable plot
var.plot<-fviz_pca_var(res.pca, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
legend.title = "Contribution",repel=T,labelsize = 3)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(fill="white"))+
scale_x_reverse()
var.plot<-ggpar(var.plot,
title = "Variable contribution",
xlab = "", ylab = "")
var.plot
#Build multipart figure
figure <- ggdraw() +
draw_plot(ctr.plot, x = 0, y = 0, width = .92, height = 1) +
draw_plot(var.plot, x = .55, y = .32, width = 0.55, height = 0.55)
figure
#Save plot
ggsave("Figure1.tiff",figure,scale=1.4,width=25,height=12,units="cm",dpi=300)
#Country plot
ctr.plot<-fviz_pca_ind(res.pca,
geom.ind = c("point"),
pointshape = 21,
pointsize = "cos2",
fill.ind = country_data_sum$continent,col.ind="black",invisible = "quali",
legend.title = list(fill = "Continent", size = "Representation"),repel=T)+
ggpubr::fill_palette("Spectral")+
scale_x_reverse()+
geom_text_repel(aes(label=name),hjust=0, vjust=0, show.legend=F, size=4)+
theme(legend.position = "bottom")+
guides(fill = guide_legend(override.aes = list(size = 5)))
ctr.plot<-ggpar(ctr.plot,
title = "Principal Component Analysis",
xlab = "PC1 (26%)", ylab = "PC2 (13.5%)")
ctr.plot
#Variable plot
var.plot<-fviz_pca_var(res.pca, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
legend.title = "Contribution",repel=T,labelsize = 4)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(fill="white"))+
scale_x_reverse()
var.plot<-ggpar(var.plot,
title = "Variable contribution",
xlab = "", ylab = "")
var.plot
#Build multipart figure
figure <- ggdraw() +
draw_plot(ctr.plot, x = 0, y = 0, width = .92, height = 1) +
draw_plot(var.plot, x = .55, y = .32, width = 0.55, height = 0.55)
figure
#Save plot
ggsave("Figure1.tiff",figure,scale=1.5,width=25,height=12,units="cm",dpi=300)
#Country plot
ctr.plot<-fviz_pca_ind(res.pca,
select.ind = list(cos2 = 40),
geom.ind = c("point"),
pointshape = 21,
pointsize = "cos2",
fill.ind = country_data_sum$continent,col.ind="black",invisible = "quali",
legend.title = list(fill = "Continent", size = "Representation"),repel=T)+
ggpubr::fill_palette("Spectral")+
scale_x_reverse()+
geom_text_repel(aes(label=name),hjust=0, vjust=0, show.legend=F, size=4)+
theme(legend.position = "bottom")+
guides(fill = guide_legend(override.aes = list(size = 5)))
ctr.plot<-ggpar(ctr.plot,
title = "Principal Component Analysis",
xlab = "PC1 (26%)", ylab = "PC2 (13.5%)")
ctr.plot
#Country plot
ctr.plot<-fviz_pca_ind(res.pca,
select.ind = list(cos2 = 100),
geom.ind = c("point"),
pointshape = 21,
pointsize = "cos2",
fill.ind = country_data_sum$continent,col.ind="black",invisible = "quali",
legend.title = list(fill = "Continent", size = "Representation"),repel=T)+
ggpubr::fill_palette("Spectral")+
scale_x_reverse()+
geom_text_repel(aes(label=name),hjust=0, vjust=0, show.legend=F, size=4)+
theme(legend.position = "bottom")+
guides(fill = guide_legend(override.aes = list(size = 5)))
ctr.plot<-ggpar(ctr.plot,
title = "Principal Component Analysis",
xlab = "PC1 (26%)", ylab = "PC2 (13.5%)")
ctr.plot
#Country plot
ctr.plot<-fviz_pca_ind(res.pca,
select.ind = list(cos2 = 110),
geom.ind = c("point"),
pointshape = 21,
pointsize = "cos2",
fill.ind = country_data_sum$continent,col.ind="black",invisible = "quali",
legend.title = list(fill = "Continent", size = "Representation"),repel=T)+
ggpubr::fill_palette("Spectral")+
scale_x_reverse()+
geom_text_repel(aes(label=name),hjust=0, vjust=0, show.legend=F, size=4)+
theme(legend.position = "bottom")+
guides(fill = guide_legend(override.aes = list(size = 5)))
ctr.plot<-ggpar(ctr.plot,
title = "Principal Component Analysis",
xlab = "PC1 (26%)", ylab = "PC2 (13.5%)")
ctr.plot
#Country plot
ctr.plot<-fviz_pca_ind(res.pca,
select.ind = list(contrib = 100),
geom.ind = c("point"),
pointshape = 21,
pointsize = "cos2",
fill.ind = country_data_sum$continent,col.ind="black",invisible = "quali",
legend.title = list(fill = "Continent", size = "Representation"),repel=T)+
ggpubr::fill_palette("Spectral")+
scale_x_reverse()+
geom_text_repel(aes(label=name),hjust=0, vjust=0, show.legend=F, size=4)+
theme(legend.position = "bottom")+
guides(fill = guide_legend(override.aes = list(size = 5)))
ctr.plot<-ggpar(ctr.plot,
title = "Principal Component Analysis",
xlab = "PC1 (26%)", ylab = "PC2 (13.5%)")
ctr.plot
#Country plot
ctr.plot<-fviz_pca_ind(res.pca,
select.ind = list(contrib = 120),
geom.ind = c("point"),
pointshape = 21,
pointsize = "cos2",
fill.ind = country_data_sum$continent,col.ind="black",invisible = "quali",
legend.title = list(fill = "Continent", size = "Representation"),repel=T)+
ggpubr::fill_palette("Spectral")+
scale_x_reverse()+
geom_text_repel(aes(label=name),hjust=0, vjust=0, show.legend=F, size=4)+
theme(legend.position = "bottom")+
guides(fill = guide_legend(override.aes = list(size = 5)))
ctr.plot<-ggpar(ctr.plot,
title = "Principal Component Analysis",
xlab = "PC1 (26%)", ylab = "PC2 (13.5%)")
ctr.plot
#Country plot
ctr.plot<-fviz_pca_ind(res.pca,
geom.ind = c("point"),
pointshape = 21,
pointsize = "cos2",
fill.ind = country_data_sum$continent,col.ind="black",invisible = "quali",
legend.title = list(fill = "Continent", size = "Representation"),repel=T)+
ggpubr::fill_palette("Spectral")+
scale_x_reverse()+
geom_text_repel(aes(label=name),hjust=0, vjust=0, show.legend=F, size=4)+
theme(legend.position = "bottom")+
guides(fill = guide_legend(override.aes = list(size = 5)))
ctr.plot<-ggpar(ctr.plot,
title = "Principal Component Analysis",
xlab = "PC1 (26%)", ylab = "PC2 (13.5%)")
ctr.plot
#Variable plot
var.plot<-fviz_pca_var(res.pca, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
legend.title = "Contribution",repel=T,labelsize = 4)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(fill="white"))+
scale_x_reverse()
var.plot<-ggpar(var.plot,
title = "Variable contribution",
xlab = "", ylab = "")
var.plot
#Build multipart figure
figure <- ggdraw() +
draw_plot(ctr.plot, x = 0, y = 0, width = .92, height = 1) +
draw_plot(var.plot, x = .55, y = .32, width = 0.55, height = 0.55)
figure
#Save plot
ggsave("Figure1.tiff",figure,scale=1.5,width=25,height=12,units="cm",dpi=300)
?fviz_pca_var
#Variable plot
var.plot<-fviz_pca_var(res.pca, alpha.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
legend.title = "Contribution",repel=T,labelsize = 4)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(fill="white"))+
scale_x_reverse()
var.plot<-ggpar(var.plot,
title = "Variable contribution",
xlab = "", ylab = "")
var.plot
#Variable plot
var.plot<-fviz_pca_var(res.pca, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
legend.title = "Contribution",repel=T,labelsize = 4)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(fill="white"))+
scale_x_reverse()
var.plot<-ggpar(var.plot,
title = "Variable contribution",
xlab = "", ylab = "")
var.plot
#####Test PCA
trends_sum_wide<-spread(trends_sum,issue,mean_rvol_tr)
twitter_sum_wide<-spread(twitter_sum,issue,mean_rvol_tw)
webhose_sum_wide<-spread(webhose_sum,issue,mean_rvol_wh)
trends_sum_wide
#Summary by country
trends_mean_ctr<-apply(trends_sum_wide[,2:23],1,function(x) mean(x))
trends_mean_ctr
#Summary by country
trends_mean_ctr<-data.frame(trends_sum_wide[,1],
)
#Summary by country
trends_mean_ctr<-data.frame(trends_sum_wide[,1],
mean_tr_vol=apply(trends_sum_wide[,2:23],1,function(x) mean(x)))
trends_mean_ctr
#Summary by country
trends_mean_ctr<-data.frame(country=trends_sum_wide[,1],
mean_tr_vol=apply(trends_sum_wide[,2:23],1,function(x) mean(x)))
#Summary by country
all_mean_ctr<-data.frame(country=all_sum_wide[,1],
mean_tr_vol=apply(all_sum_wide[,2:23],1,function(x) mean(x)))
all_mean_ctr
library(rworldmap)
?joinCountryData2Map
#create a map-shaped window
mapDevice('x11')
#join to a coarse resolution map
spdf <- joinCountryData2Map(all_mean_ctr, joinCode="ISO2", nameJoinColumn="country")
mapCountryData(spdf, nameColumnToPlot="value", catMethod="fixedWidth")
#join to a coarse resolution map
spdf <- joinCountryData2Map(all_mean_ctr, joinCode="ISO3", nameJoinColumn="country")
#join to a coarse resolution map
spdf <- joinCountryData2Map(all_mean_ctr, joinCode="ISO2", nameJoinColumn="country")
#Summary by country
all_mean_ctr<-data.frame(country=all_sum_wide[,1],
ctr_iso3=countrycode(all_sum_wide[,1], 'iso2c', 'iso3c')
mean_tr_vol=apply(all_sum_wide[,2:23],1,function(x) mean(x)))
#Summary by country
all_mean_ctr<-data.frame(country=all_sum_wide[,1],
ctr_iso3=countrycode(all_sum_wide[,1], 'iso2c', 'iso3c'),
mean_tr_vol=apply(all_sum_wide[,2:23],1,function(x) mean(x)))
all_mean_ctr
#join to a coarse resolution map
spdf <- joinCountryData2Map(all_mean_ctr, joinCode="ISO3", nameJoinColumn="ctr_iso3")
detach("package:rworldmap", unload=TRUE)
install.packages("rworldmap")
library(rworldmap)
#join to a coarse resolution map
spdf <- joinCountryData2Map(all_mean_ctr, joinCode="ISO3", nameJoinColumn="ctr_iso3")
detach("package:rworldmap", unload=TRUE)
library("rworldmap", lib.loc="~/R/win-library/3.4")
#join to a coarse resolution map
spdf <- joinCountryData2Map(all_mean_ctr, joinCode="ISO3", nameJoinColumn="ctr_iso3")
